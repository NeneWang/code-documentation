import{_ as o,r as i,o as p,c as l,a as n,b as s,d as e,e as t}from"./app-CZArcxI1.js";const c="/docs/assets/Pasted image 20240312112552-De5W2zzd.png",r="/docs/assets/Pasted image 20240312112450-DkvuOi37.png",u="/docs/assets/Pasted image 20240312112501-DOsGRc-x.png",d="/docs/assets/Pasted image 20240312131849-YqiJy8ec.png",k="/docs/assets/Pasted image 20240312132008-DTgDFkuH.png",m="/docs/assets/Pasted image 20240312131813-Qyz6C7Pu.png",v="/docs/assets/Pasted image 20240312132135-CdAhIKSR.png",h="/docs/assets/Pasted image 20240312133334-L7YI5hqa.png",g="/docs/assets/Pasted image 20240312133433-BEMbmrWu.png",b="/docs/assets/Pasted image 20240312133513-CDxQQMRc.png",_="/docs/assets/Pasted image 20240312133752-DqvBpK0M.png",f="/docs/assets/Pasted image 20240312133809-Cqbr5dH-.png",y="/docs/assets/Pasted image 20240312134958-BrycEkE6.png",w="/docs/assets/Pasted image 20240312135113-NW0c6XMs.png",q="/docs/assets/Pasted image 20240312135318-GGUOmREp.png",x="/docs/assets/Pasted image 20240312135602-ClQCUsxY.png",S="/docs/assets/Pasted image 20240312141020-CG8lajnd.png",D="/docs/assets/Pasted image 20240312141107-BroU3lkv.png",I="/docs/assets/Pasted image 20240312141221-DJf_k7kK.png",C="/docs/assets/Pasted image 20240312141904-BrHv0e0w.png",A="/docs/assets/Pasted image 20240312142027-BeNWA1t4.png",E="/docs/assets/Pasted image 20240312142443-Bl3cfUKx.png",T="/docs/assets/Pasted image 20240312145245-C-nj7-SS.png",P="/docs/assets/Pasted image 20240312145422-BA3EY5p9.png",z="/docs/assets/Pasted image 20240315115553-CN7RTMyU.png",j={},R=t(`<h2 id="_5-tuesday" tabindex="-1"><a class="header-anchor" href="#_5-tuesday"><span>5 Tuesday</span></a></h2><h3 id="some-notes-regarding-the-idea-of-dev-and-how-to-enforce-such" tabindex="-1"><a class="header-anchor" href="#some-notes-regarding-the-idea-of-dev-and-how-to-enforce-such"><span>Some notes regarding the idea of dev. And how to enforce such:</span></a></h3><ul><li>48 Hours policy for all getbacks. 24 Hours Policy for sms replies.</li></ul><p>With this type of policy you should be able to keep up with work.</p><ul><li>In New York locations allow also: Visits and Monthly Photoshoot Sessions to keep Media upkeep.</li></ul><p>How to enforce such? Using the Focusmate strategy and just blocking the hours expected during the week immediatelly upon having a task received.</p><p>Also how do you keep track of clients?</p><p>How about the hours credit proposal?</p><p>Wait how am I handling the Interactions again? Does it make sense to hae the event start and end, and not keep track of all interactions? My guess is that I can avoid creating the timeslots. And if the end one (The latest one records everyting as expected)</p><h2 id="_7-thursday" tabindex="-1"><a class="header-anchor" href="#_7-thursday"><span>7 Thursday</span></a></h2><h3 id="where-is-the-error" tabindex="-1"><a class="header-anchor" href="#where-is-the-error"><span>Where is the error?</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>Processing ID fetched: <span class="token punctuation">[</span><span class="token number">246</span><span class="token punctuation">]</span>
Processing Status Changed to: PROCESSING
Processing Started for: 6c9a5500-00f0-4a26-a1b6-efd5c7eba828
ERROR:ERROR: current transaction is aborted, commands ignored <span class="token keyword">until</span> end of transaction block
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This occurs before:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ConnectorBasedIntegrationAdapter</span><span class="token punctuation">(</span>IntegrationDataAdapter<span class="token punctuation">)</span><span class="token punctuation">:</span>
    integration_name <span class="token operator">=</span> <span class="token string">&#39;connector_based_adapter&#39;</span>
    <span class="token keyword">def</span> <span class="token function">retrieveOrganizationData</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> jobService<span class="token punctuation">:</span> JobService<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">dict</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        Retrieves in the following format:
        Since the same user is guaranteed for this entire data cluster. Expect only a single requirement.
        {
            organization_guid: str,
            organization_id: int,
            timezone: str,
            user_id: int
        }
        &quot;&quot;&quot;</span>
        
        cursor <span class="token operator">=</span> jobService<span class="token punctuation">.</span>cursor
        res <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;organization_guid&quot;</span><span class="token punctuation">:</span> jobService<span class="token punctuation">.</span>organization_guid<span class="token punctuation">,</span>

        <span class="token punctuation">}</span> <span class="token comment"># nod to leetcode xd</span>


        
        <span class="token comment"># Retrieve organization_id </span>
        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>
            <span class="token string-interpolation"><span class="token string">f&quot;SELECT id FROM organization WHERE guid = &#39;</span><span class="token interpolation"><span class="token punctuation">{</span>jobService<span class="token punctuation">.</span>organization_guid<span class="token punctuation">}</span></span><span class="token string">&#39;&quot;</span></span>
        <span class="token punctuation">)</span>
        cursor_response_organization <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Organization data found for connector:&#39;</span><span class="token punctuation">,</span> cursor_response_organization<span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token keyword">not</span> cursor_response_organization<span class="token punctuation">:</span>
            jobService<span class="token punctuation">.</span>addLogMessage<span class="token punctuation">(</span>
                log_message<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&quot;Organization not found in the database. from organization </span><span class="token interpolation"><span class="token punctuation">{</span>jobService<span class="token punctuation">.</span>organization_guid<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
                log_detail<span class="token operator">=</span>&quot;Organization <span class="token keyword">not</span> found <span class="token keyword">in</span> the database<span class="token punctuation">.</span> <span class="token keyword">from</span> organization <span class="token punctuation">{</span>jobService<span class="token punctuation">.</span>organization_guid<span class="token punctuation">}</span>\\n\\
                    using integration_name <span class="token punctuation">{</span>self<span class="token punctuation">.</span>integration_name<span class="token punctuation">}</span> <span class="token keyword">and</span> organization_guid <span class="token punctuation">{</span>jobService<span class="token punctuation">.</span>organization_guid<span class="token punctuation">}</span>&quot;<span class="token punctuation">,</span>
                log_type<span class="token operator">=</span><span class="token string">&quot;Error&quot;</span>
                <span class="token punctuation">)</span>
            <span class="token comment"># This should be a breaking error</span>
            <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">&quot;Organization not found in the database.&quot;</span><span class="token punctuation">)</span>
        
        res<span class="token punctuation">[</span><span class="token string">&quot;organization_id&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> cursor_response_organization<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

        <span class="token comment"># Check for the user_id where connector is X</span>
        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>
            <span class="token string-interpolation"><span class="token string">f&quot;SELECT c.user_id, u.timezone FROM connector AS c JOIN users AS u ON u.id = c.user_id WHERE c.guid = &#39;</span><span class="token interpolation"><span class="token punctuation">{</span>jobService<span class="token punctuation">.</span>connector_guid<span class="token punctuation">}</span></span><span class="token string">&#39;;&quot;</span></span>
        <span class="token punctuation">)</span>
        cursor_response <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-friday" tabindex="-1"><a class="header-anchor" href="#_8-friday"><span>8 Friday</span></a></h2><ul><li>[x] 8.1 Allowing Errors Report to be also on the end message.</li><li>[x] 8.2 Add some design considerations</li><li>[x] 8.3 Deploy a Staging Equivalent? (This is required first for the migration of data models to be run first.)</li><li>[x] 8.4 Update Model&#39;s username to be included.</li><li>[x] 8.5 Send the correct model and the right snapshot.</li><li>[x] 8.6 Continue working first on the Data Science Project: Get started with it!</li><li>[x] 8.7 Fix Nancy Site, issue with the images.</li><li>[x] 8.8 Drafting a General Business Proposal as for how the business works.</li><li>[x] 8.12 Work on Music Assignment</li><li>[x] 8.13 Work on IOS App Dev Assignment.</li><li>[x] 8.9 Drafting a simple logistics way to have the pricing for each feature and estimated rates for different common services.</li><li>[x] 8.10 Draft a way to logically divide distinct work.</li><li>[x] 8.11 Add that feature to your website (Anvil Tech).</li></ul><h3 id="_8-1-allowing-errors-report-to-be-also-on-the-end-message" tabindex="-1"><a class="header-anchor" href="#_8-1-allowing-errors-report-to-be-also-on-the-end-message"><span>8.1 Allowing Errors Report to be also on the end message.</span></a></h3><p>It looks as if the error report does indeed make sense.</p><h3 id="_8-2-adding-design-considerations" tabindex="-1"><a class="header-anchor" href="#_8-2-adding-design-considerations"><span>8.2 Adding Design Considerations</span></a></h3><ul><li>models <code>username</code></li><li>Update layout screens with the ts1, etc. configurations</li></ul><h3 id="_8-6-continue-working-first-on-the-data-science-project-get-started-with-it" tabindex="-1"><a class="header-anchor" href="#_8-6-continue-working-first-on-the-data-science-project-get-started-with-it"><span>8.6 Continue working first on the Data Science Project: Get started with it!</span></a></h3><ul><li>[x] Show the data</li><li>[x] Work on Showing the basics of the dataset illustrating the distributions?</li></ul><h2 id="_12-tuesday" tabindex="-1"><a class="header-anchor" href="#_12-tuesday"><span>12 Tuesday</span></a></h2><h3 id="_12-todo" tabindex="-1"><a class="header-anchor" href="#_12-todo"><span>12.todo</span></a></h3><ul><li>[x] 12.1 Create Mockup Cards <ul><li>[x] Document the Creation of mockup cards</li></ul></li><li>[ ] 12.2 Chrome Extension</li><li>[x] 12.3 Checking Antonio&#39;s Latest Release</li><li>[ ] 12.4 Exploring Future Cookbook integrations (Soon) regex, sql, react <ul><li>[ ] Second tier: Math, Stats, Discrete (From the practice book)</li></ul></li></ul><h3 id="_12-1-create-mockup-cards" tabindex="-1"><a class="header-anchor" href="#_12-1-create-mockup-cards"><span>12.1 Create Mockup Cards</span></a></h3><ul><li><p>[x] Document the creation of Mockup Cards</p></li><li><p>Ensure new model related to suer is documented in summary:</p></li></ul><p>newest changes:</p><ul><li><p>Added username</p></li><li><p>[x] Feature Request?</p></li></ul><h3 id="_12-2-continue-working-on-chrome-extension" tabindex="-1"><a class="header-anchor" href="#_12-2-continue-working-on-chrome-extension"><span>12.2 Continue Working On Chrome Extension</span></a></h3>`,30),W={href:"https://in.api.loading.win/dev/incoming",title:"https://in.api.loading.win/dev/incoming",target:"_blank",rel:"noopener noreferrer"},N=n("li",null,"[ ] Update Chrome documentation to reflect recent changes.",-1),O=n("li",null,"[ ] Changing body to suit latest staging event structure.",-1),L=n("li",null,"[ ] Use Chrome Connector Credential Associated.",-1),F=n("li",null,"[ ] Update to 1 minute instead of whatever it is right now.",-1),U=t('<h3 id="_12-3-checking-antonio-s-latest-release" tabindex="-1"><a class="header-anchor" href="#_12-3-checking-antonio-s-latest-release"><span>12.3 Checking Antonio&#39;s latest release.</span></a></h3><p>Make sure to check the following is working properly:</p><ul><li>[x] Does it send events correctly?</li></ul><blockquote><p>Lets explore the tracking?</p></blockquote><p><img src="'+c+`" alt=""></p><p>It doesn&#39;t seem to be sending events that are being accepted</p><blockquote><p>is it sending towards <code>localhost</code>?</p></blockquote><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token preprocessor property">#<span class="token directive keyword">if</span> false    </span>
                <span class="token comment">// SettingsService.SetRestApiEndpoint(&quot;http://localhost:3000/staging_events&quot;);</span>
                SettingsService<span class="token punctuation">.</span><span class="token function">SetRestApiEndpoint</span><span class="token punctuation">(</span><span class="token string">&quot;http://stage.api.loading.win/staging_events&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token preprocessor property">#<span class="token directive keyword">else</span></span>
                SettingsService<span class="token punctuation">.</span><span class="token function">SetRestApiEndpoint</span><span class="token punctuation">(</span><span class="token string">&quot;https://in.api.loading.win/dev/incoming&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token preprocessor property">#<span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Doesn&#39;t seem to, not the <code>false</code></p><blockquote><p>Let&#39;s see what happens on the Lambda logs + Dynamo for any error logs.</p></blockquote><p><img src="`+r+'" alt=""></p><p>We can see here that it all matches:</p><p>![[../../../img/Pasted image 20240312111010.png]]</p><p>And the connector is matching</p><blockquote><p>Checking for error marked in dynamo table?</p></blockquote><p><img src="'+u+'" alt=""></p><p>Can be seen that no <code>total_errors</code> neither <code>total_connects</code> were updated, is this because the lambda didn&#39;t implement it?</p><h4 id="talking-to-fix-the-dev-code" tabindex="-1"><a class="header-anchor" href="#talking-to-fix-the-dev-code"><span>Talking to fix the Dev code:</span></a></h4><p><img src="'+d+'" alt=""></p><blockquote><p>Seems that Anthony didn&#39;t push the last version:</p></blockquote><p><img src="'+k+'" alt=""> Fixed.</p><blockquote><p>When sending to in.api:</p></blockquote><p><img src="'+m+'" alt=""></p><p>However doesn&#39;t seem to be inserting the right values.</p><blockquote><p>Does it post locally?</p></blockquote><p><img src="'+v+`" alt=""></p><p>Yes, The fields also looks correct</p><blockquote><p>So lets see if the problem is in the cloud:</p></blockquote><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  guid<span class="token operator">:</span> &#39;4572d2c4<span class="token number">-973e-4796</span><span class="token number">-9015</span>-44236457fcbc&#39;<span class="token punctuation">,</span>
  date<span class="token operator">:</span> &#39;<span class="token number">2024</span><span class="token number">-03</span>-12T17<span class="token operator">:</span><span class="token number">05</span><span class="token operator">:</span><span class="token number">33</span>.5990383Z&#39;<span class="token punctuation">,</span>
  connector<span class="token operator">:</span> &#39;4c374db5<span class="token number">-8e37</span>-428e-b988-92ce9879165b&#39;<span class="token punctuation">,</span>
  version<span class="token operator">:</span> &#39;<span class="token number">1.0</span>&#39;<span class="token punctuation">,</span>
  organization<span class="token operator">:</span> &#39;0238bfa6-2a89-42fe-8a67-fde4c80391ea&#39;<span class="token punctuation">,</span>
  signature_1<span class="token operator">:</span> &#39;884493dcf2f03089f9c63b196808b0fd5300db0e9887783da94223c4ca4ab1c6&#39;<span class="token punctuation">,</span>
  signature_2<span class="token operator">:</span> &#39;a248fe59218c37ea2a841ec57a76fd8d43e0693a8ef34f5115c51ade1f0d03b4&#39;<span class="token punctuation">,</span>
  details<span class="token operator">:</span> <span class="token punctuation">[</span>
    &#39;<span class="token punctuation">{</span><span class="token property">&quot;event_date&quot;</span><span class="token operator">:</span><span class="token string">&quot;2024-03-12T15:40:50.601812Z&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;event_end_date&quot;</span><span class="token operator">:</span><span class="token string">&quot;2024-03-12T15:40:52.0441286Z&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;window_title&quot;</span><span class="token operator">:</span><span class="token null keyword">null</span><span class="token punctuation">,</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;explorer&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;span_guid&quot;</span><span class="token operator">:</span><span class="token string">&quot;a88c04b7-0f54-440c-bc13-982b9be4cad8&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;description&quot;</span><span class="token operator">:</span><span class="token null keyword">null</span><span class="token punctuation">,</span><span class="token property">&quot;keypresses&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">&quot;mouseclicks&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">&quot;windows_pid&quot;</span><span class="token operator">:</span><span class="token string">&quot;6724&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">&quot;guid&quot;</span><span class="token operator">:</span><span class="token string">&quot;483849fe-8a29-4a15-ae3e-d37a24f24db5&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;event_type&quot;</span><span class="token operator">:</span><span class="token string">&quot;WIN_APP_ACTIVE&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;actor&quot;</span><span class="token operator">:</span><span class="token string">&quot;AzureAD\\\\\\\\NelsonWang&quot;</span><span class="token punctuation">}</span>&#39;<span class="token punctuation">,</span>
    &#39;<span class="token punctuation">{</span><span class="token property">&quot;event_date&quot;</span><span class="token operator">:</span><span class="token string">&quot;2024-03-12T15:40:52.0603322Z&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;event_end_date&quot;</span><span class="token operator">:</span><span class="token string">&quot;0001-01-01T00:00:00&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;window_title&quot;</span><span class="token operator">:</span><span class="token null keyword">null</span><span class="token punctuation">,</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;explorer&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;span_guid&quot;</span><span class="token operator">:</span><span class="token string">&quot;e59fcf70-e84b-470d-823e-69ab062e9714&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;description&quot;</span><span class="token operator">:</span><span class="token null keyword">null</span><span class="token punctuation">,</span><span class="token property">&quot;keypresses&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">&quot;mouseclicks&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">&quot;windows_pid&quot;</span><span class="token operator">:</span><span class="token string">&quot;6724&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token property">&quot;guid&quot;</span><span class="token operator">:</span><span class="token string">&quot;a29d1293-d7ed-468e-a74d-00709f02f69c&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;event_type&quot;</span><span class="token operator">:</span><span class="token string">&quot;WIN_APP_ACTIVE&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;actor&quot;</span><span class="token operator">:</span><span class="token string">&quot;AzureAD\\\\\\\\NelsonWang&quot;</span><span class="token punctuation">}</span>&#39;
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>There are more events, but I am hiding them.</p><p>So lets review postman: <img src="`+h+'" alt=""></p><p>There were no logs in the CloudWatch</p><p>But if I use the old link: <img src="'+g+'" alt=""></p><p>Does that even make sense? They are pointing to the same lambda in the end. But in this case I am at least getting some logs: <img src="'+b+`" alt=""></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token number">2024</span>-03-12T13:14:53.373-04:00

<span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> Runtime.UserCodeSyntaxError: Syntax error <span class="token keyword">in</span> module <span class="token string">&#39;lambda_function&#39;</span><span class="token builtin class-name">:</span> invalid syntax. Perhaps you forgot a comma? <span class="token punctuation">(</span>lambda_function.py, line <span class="token number">110</span><span class="token punctuation">)</span>  
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>:  
  File <span class="token string">&quot;/var/task/lambda_function.py&quot;</span> Line <span class="token number">110</span>  
                <span class="token string">&#39;organization&#39;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It was missing a comma:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>
            <span class="token string">&#39;organization&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&#39;DataType&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;String&#39;</span><span class="token punctuation">,</span>
                <span class="token string">&#39;StringValue&#39;</span><span class="token punctuation">:</span> d<span class="token punctuation">[</span><span class="token string">&#39;organization&#39;</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
            <span class="token string">&#39;connector&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&#39;DataType&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;String&#39;</span><span class="token punctuation">,</span>
                <span class="token string">&#39;StringValue&#39;</span><span class="token punctuation">:</span> d<span class="token punctuation">[</span><span class="token string">&#39;connector&#39;</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Fixed to:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>
            &#39;organization&#39;: {
                &#39;DataType&#39;: &#39;String&#39;,
                &#39;StringValue&#39;: d[&#39;organization&#39;]
            },
            &#39;connector&#39;: {
                &#39;DataType&#39;: &#39;String&#39;,
                &#39;StringValue&#39;: d[&#39;connector&#39;]
            },
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Lets deploy and test:</p><p>Fixed: <img src="`+_+'" alt=""></p><p>??</p><p><img src="'+f+'" alt=""> Not fixed on in.api...</p><p>After searching: https://stackoverflow.com/questions/57168148/unable-to-resolve-not-a-valid-key-value-pair-missing-equal-sign-in-authoriza</p>',44),M={href:"https://stackoverflow.com/posts/57172027/timeline",target:"_blank",rel:"noopener noreferrer"},B=n("code",null,"response = requests.post(url, headers=headers, data=my_json)",-1),H=n("code",null,"requests.post(url, headers=headers, json=my_json)",-1),Y=n("code",null,"requests.post(url, headers=headers,data=json.dumps(my_json))",-1),V=t(`<p>Lets make a temporary fix and make a note for it:</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token preprocessor property">#<span class="token directive keyword">if</span> </span><span class="token return-type class-name">false</span>
                SettingsService<span class="token punctuation">.</span><span class="token function">SetRestApiEndpoint</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:3000/staging_events&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token preprocessor property">#<span class="token directive keyword">else</span></span>
                <span class="token comment">// SettingsService.SetRestApiEndpoint(&quot;https://in.api.loading.win/dev/incoming&quot;);</span>
                SettingsService<span class="token punctuation">.</span><span class="token function">SetRestApiEndpoint</span><span class="token punctuation">(</span><span class="token string">&quot;https://c27bsii3c1.execute-api.us-east-1.amazonaws.com/dev/incoming&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token preprocessor property">#<span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+y+'" alt=""> One windows log is being processed at least.</p><ul><li>[x] How about if a user is active in a site for more than 1 minute?</li><li>[x] How about Admin install permissions?</li></ul><p><img src="'+w+'" alt=""></p><h4 id="inspecting-the-staging-event" tabindex="-1"><a class="header-anchor" href="#inspecting-the-staging-event"><span>Inspecting the Staging Event</span></a></h4><p><img src="'+q+'" alt=""></p><p>You can see here there is an issue or potential issue. Is details being sent as a string for each row?</p><p>Lets check the S3</p><p>Hm, not event accepting it huh?</p><p>Only this was sent that is correct:</p><p><img src="'+x+`" alt=""></p><p>And as seen on sql query figure, there is only one event being processed, which means most sent here fail:</p><p>Lets log in <code>staging_events</code> local. and save it into json</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;body-parser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  

<span class="token comment">// Middleware to parse JSON bodies</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  

<span class="token comment">// Define the POST route for staging_events</span>

app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/staging_events&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Received message:&#39;</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;----------------------------------------------------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Save as new event.json</span>

  <span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&#39;event.json&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Saved!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// You can process the event here as needed</span>

  

  <span class="token comment">// Send a response back to the client</span>

  res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Event received&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  

<span class="token comment">// Start the server</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Server started on port 3000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That logs the follwoing:</p><p><img src="`+S+'" alt=""></p><ul><li>You can see that this is a string. Which wont sent any issues:</li></ul><p><img src="'+D+'" alt=""></p><p>It does get saved here using Postman, but then, why it wasn&#39;t being saved before?:</p><p><img src="'+I+'" alt=""></p><p>So lets try sending events to windows. Most likely it doesn&#39;t support even fetching it.</p><blockquote><p>Does Cloudwatch complain anything useful?</p></blockquote><p>Therefore Option 2 Should be set to run:</p><blockquote><p>Make Lambda resilient by Allowing None.</p></blockquote><p>Here</p><p><img src="'+C+'" alt=""></p><p>Here a fairly recent error mentioning the following:</p><p>2024-03-12T14:17:28.805-04:00</p><p>[ERROR] KeyError: &#39;User-Agent&#39;<br> Traceback (most recent call last):<br>   File &quot;/var/task/lambda_function.py&quot;, line 74, in lambda_handler<br>     request_data[&quot;user_agent&quot;] = event[&#39;headers&#39;][&#39;User-Agent&#39;]</p><p>Oh look:</p><p><img src="'+A+'" alt=""></p><p>User-agent is probably not being set at Windows</p><blockquote><p>Temporary fix making User-Agent: NelsonRuntime</p></blockquote><p>Look at that! We can&#39;t force it:</p><p><img src="'+E+`" alt=""></p><blockquote><p>Lets make it null safe instead</p></blockquote><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>request_data<span class="token punctuation">[</span><span class="token string">&quot;user_agent&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> event<span class="token punctuation">[</span><span class="token string">&#39;headers&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment"># None Safe</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Logs look healthy</p><p><img src="`+T+'" alt=""></p><p><img src="'+P+'" alt=""></p><p>Looks healthy (except because of the known error of the strings.)</p><h4 id="fix-notes" tabindex="-1"><a class="header-anchor" href="#fix-notes"><span>Fix notes:</span></a></h4><ul><li>Is saving detail events as a string</li><li>I don&#39;t think is posting it correctly to the endpoint (as can be seen that the postman just works fine while but when we are depending on ) <ul><li>The error doesn&#39;t seem to be on the body.</li><li>It seems that it is because in Headers User-Agent should be set.</li><li>Solutions: we could either make Lambda more resilient by allowing no user-agent set.</li><li>Force all connectors to use User Agent</li><li>Or do both. (At least force it in Windows.)</li></ul></li></ul><h3 id="_12-4-auth0" tabindex="-1"><a class="header-anchor" href="#_12-4-auth0"><span>12.4 Auth0</span></a></h3><p>https://manage.auth0.com/dashboard/us/dev-vobjs07lab7w5wgx/apis</p><p>Api Audience: https://dev-vobjs07lab7w5wgx.us.auth0.com/api/v2/</p><ul><li>[ ] Plan some ideas regarding discussions with Ashraf into how to integrate the userbase.</li></ul><p>https://developer.chrome.com/docs/extensions/reference/api/enterprise/deviceAttributes !! <strong>Important:</strong> This API works <strong>only on ChromeOS</strong>.</p><p>Is this the same for Force Install?</p>',50),G={href:"https://developer.chrome.com/docs/extensions/reference/api/enterprise/deviceAttributes",target:"_blank",rel:"noopener noreferrer"},J=t(`<p>! But they only work for Chrome OS.</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>chrome.enterprise.deviceAttributes.getDeviceHostname(  callback?: function,  
)

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>chrome.enterprise.deviceAttributes.getDeviceSerialNumber(  callback?: function,  
)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>chrome.enterprise.deviceAttributes.getDeviceAssetId(  callback?: function,  
)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Fetches the administrator-annotated Asset Id. If the current user is not affiliated or no Asset Id has been set by the administrator, returns an empty string.</p><p><strong>Looking at Identity</strong></p><p>Fetches the administrator-annotated Asset Id. If the current user is not affiliated or no Asset Id has been set by the administrator, returns an empty string.</p><ul><li>These are all related to the user Logged Identity</li></ul><h3 id="chrome-instance-id" tabindex="-1"><a class="header-anchor" href="#chrome-instance-id"><span>Chrome Instance ID</span></a></h3><p>Use <code>chrome.instanceID</code> to access the Instance ID service.</p>`,10),K={href:"https://developers.google.com/instance-id/guides/android-implementation",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://developers.google.com/instance-id/guides/ios-implementation",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://developer.chrome.com/apps/instanceID",target:"_blank",rel:"noopener noreferrer"},X=t(`<p>Pass Instance ID tokens to your server and use the Instance ID service to verify the app package name and check if it has a valid signature. Verifying tokens with the Instance ID Cloud Service helps identify known apps. To reduce cost and redundant round trip communications, configure your server to store these tokens so the check is needed only once. In the event of a security concern, your app can delete tokens, or Instance ID itself, and generate new ones. In addition, the Instance ID server initiates token or Instance ID refresh if it detects bugs or security issues.</p><p>Search Scope Hypothesis:</p><ul><li><p>If it exists is an enterprise feature</p></li><li><p>Wouldn&#39;t make sense for Chrome to somehow detect your unique pc id.</p></li><li><p>Neither to have an identifier of your laptop unless is a Chromebook.</p></li><li><p>You need to fix that SLC site thing.</p></li><li><p>You need to allow option for Local Edit.</p></li><li><p>You need to allow option to eras images in favor of local edit? How about images? I am not sure neither.</p></li></ul><p>Negotiations</p><ul><li>What are we offering to clubs? <ul><li>Enhancing club members experience</li><li>Allow Users the option to opt out and anonymously share their transaction data for product improvement/feedback and personal report.</li><li>Offer API and Dataset and Customers Data</li><li>Data and Data Historical Data Inference Course and Talks</li><li>Build Relations with Investment Clubs (Starting from CUNY and immediate NYC Schools)</li><li>Instant access to our private network of industry connections.</li></ul></li><li>Making an offer they cant afford to lose.</li><li>Why build customer relationships?</li><li>Being able to market locally in person is a huge advantage. And me and Armando are graduating this semester which means no more in campus advantage. Building relationships with Clubs, will however allow us to bypass our school timeframe, and as long as these clubs exists we have word to word marketing done by someone else.</li><li>As long as any of these two products have some success, we can retarget the same audience with the interviewing tool.</li></ul><h2 id="_14-thursday" tabindex="-1"><a class="header-anchor" href="#_14-thursday"><span>14 Thursday</span></a></h2><h3 id="_14-todo" tabindex="-1"><a class="header-anchor" href="#_14-todo"><span>14.todo</span></a></h3><h3 id="_14-1-fixing-the-issue-with-the-local-timeslot" tabindex="-1"><a class="header-anchor" href="#_14-1-fixing-the-issue-with-the-local-timeslot"><span>14.1 Fixing the Issue with the Local Timeslot</span></a></h3><blockquote><p>Why is <code>timestamp_local</code> the same as timestamp after processing?</p></blockquote><p>![[Pasted image 20240314110612.png]]</p><p>How is this even possible?</p><p>This part is correct:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>  

        events_list<span class="token punctuation">:</span> List<span class="token punctuation">[</span>Event<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        timeslots_lists<span class="token punctuation">:</span> List<span class="token punctuation">[</span>Timeslot<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  

        <span class="token keyword">for</span> eventData <span class="token keyword">in</span> eventDataList<span class="token punctuation">:</span>

            event<span class="token punctuation">:</span> Event <span class="token operator">=</span> Event<span class="token punctuation">(</span>

                guid <span class="token operator">=</span> eventData<span class="token punctuation">.</span>event_guid<span class="token punctuation">,</span>
                organization_guid <span class="token operator">=</span> eventData<span class="token punctuation">.</span>organization_guid<span class="token punctuation">,</span>
                organization_id <span class="token operator">=</span> eventData<span class="token punctuation">.</span>organization_id<span class="token punctuation">,</span>
                user_id <span class="token operator">=</span> eventData<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span>
                application <span class="token operator">=</span> eventData<span class="token punctuation">.</span>application<span class="token punctuation">,</span>
                app <span class="token operator">=</span> eventData<span class="token punctuation">.</span>app<span class="token punctuation">,</span>
                app_type <span class="token operator">=</span> eventData<span class="token punctuation">.</span>app_type<span class="token punctuation">,</span>
                operation <span class="token operator">=</span> eventData<span class="token punctuation">.</span>operation<span class="token punctuation">,</span>
                operation_type <span class="token operator">=</span> eventData<span class="token punctuation">.</span>operation_type<span class="token punctuation">,</span>
                integration_name <span class="token operator">=</span> eventData<span class="token punctuation">.</span>integration_name<span class="token punctuation">,</span>
                local_timezone<span class="token operator">=</span> eventData<span class="token punctuation">.</span>local_timezone<span class="token punctuation">,</span>
                timestamp <span class="token operator">=</span> eventData<span class="token punctuation">.</span>timestamp<span class="token punctuation">,</span>
                end_time <span class="token operator">=</span> eventData<span class="token punctuation">.</span>end_time<span class="token punctuation">,</span>
                timestamp_local <span class="token operator">=</span> eventData<span class="token punctuation">.</span>timestamp_local<span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This looks correct here?</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>    <span class="token keyword">def</span> <span class="token function">defineTimeslot</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> curr_time<span class="token punctuation">:</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">,</span> eventData<span class="token punctuation">:</span> EventData<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Timeslot<span class="token punctuation">:</span>

        <span class="token comment"># Calulcate the ts1 as the minute of the day. e.g. 00:00:00 -&gt; 0, 00:01:00 -&gt; 1, 00:02:00 -&gt; 2</span>
        timestamp_datetime<span class="token punctuation">:</span> datetime<span class="token punctuation">.</span>datetime <span class="token operator">=</span> curr_time
        timestamp_local_datetime<span class="token punctuation">:</span> datetime<span class="token punctuation">.</span>datetime <span class="token operator">=</span> timestamp_datetime<span class="token punctuation">.</span>astimezone<span class="token punctuation">(</span>pytz<span class="token punctuation">.</span>timezone<span class="token punctuation">(</span>eventData<span class="token punctuation">.</span>local_timezone<span class="token punctuation">)</span><span class="token punctuation">)</span>
  

        <span class="token comment"># Extract UTC Date Time Components</span>
        hour <span class="token operator">=</span> timestamp_datetime<span class="token punctuation">.</span>hour
        minute <span class="token operator">=</span> timestamp_datetime<span class="token punctuation">.</span>minute
        day <span class="token operator">=</span> timestamp_datetime<span class="token punctuation">.</span>day
        month <span class="token operator">=</span> timestamp_datetime<span class="token punctuation">.</span>month
        year <span class="token operator">=</span> timestamp_datetime<span class="token punctuation">.</span>year

  
        timestamp_isocalendar <span class="token operator">=</span> timestamp_datetime<span class="token punctuation">.</span>isocalendar<span class="token punctuation">(</span><span class="token punctuation">)</span>
        week <span class="token operator">=</span>  timestamp_isocalendar<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        weekday <span class="token operator">=</span> timestamp_datetime<span class="token punctuation">.</span>weekday<span class="token punctuation">(</span><span class="token punctuation">)</span>


        hour_local <span class="token operator">=</span> timestamp_local_datetime<span class="token punctuation">.</span>hour
        minute_local <span class="token operator">=</span> timestamp_local_datetime<span class="token punctuation">.</span>minute
        day_local <span class="token operator">=</span> timestamp_local_datetime<span class="token punctuation">.</span>day
        month_local <span class="token operator">=</span> timestamp_local_datetime<span class="token punctuation">.</span>month
        year_local <span class="token operator">=</span> timestamp_local_datetime<span class="token punctuation">.</span>year
  

        timestamp_local_isocalendar <span class="token operator">=</span> timestamp_local_datetime<span class="token punctuation">.</span>isocalendar<span class="token punctuation">(</span><span class="token punctuation">)</span>
        week_local <span class="token operator">=</span>  timestamp_local_isocalendar<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        weekday_local <span class="token operator">=</span> timestamp_local_datetime<span class="token punctuation">.</span>weekday<span class="token punctuation">(</span><span class="token punctuation">)</span>


        ts1 <span class="token operator">=</span> timestamp_datetime<span class="token punctuation">.</span>hour <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">+</span> timestamp_datetime<span class="token punctuation">.</span>minute
        ts5 <span class="token operator">=</span> ts1 <span class="token operator">//</span> <span class="token number">5</span>
        ts10 <span class="token operator">=</span> ts1 <span class="token operator">//</span> <span class="token number">10</span>
        ts15 <span class="token operator">=</span> ts1 <span class="token operator">//</span> <span class="token number">15</span> 

        tl1 <span class="token operator">=</span> timestamp_local_datetime<span class="token punctuation">.</span>hour <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">+</span> timestamp_local_datetime<span class="token punctuation">.</span>minute
        tl5 <span class="token operator">=</span> tl1 <span class="token operator">//</span> <span class="token number">5</span>
        tl10 <span class="token operator">=</span> tl1 <span class="token operator">//</span> <span class="token number">10</span>
        tl15 <span class="token operator">=</span> tl1 <span class="token operator">//</span> <span class="token number">15</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Look, so the timestamp local datetime is redefined wow! Which means that it is actually incorrect!!</p><h2 id="_15-friday" tabindex="-1"><a class="header-anchor" href="#_15-friday"><span>15 Friday</span></a></h2><h3 id="_15-todo" tabindex="-1"><a class="header-anchor" href="#_15-todo"><span>15.todo</span></a></h3><ul><li>[ ] 15.1 Continue Working On Chrome Extension</li><li>[ ] 15.2 Ensure that newest Chrome details work Prestine</li><li>[ ] 15.3 Would it be of service to offer a &quot;Code Review&quot; every end of the week?</li></ul><h3 id="_15-1-continue-working-on-chrome-extension" tabindex="-1"><a class="header-anchor" href="#_15-1-continue-working-on-chrome-extension"><span>15.1 Continue Working On Chrome Extension</span></a></h3><ul><li>[x] Refresh the System design of Chrome Extension to the current one.</li></ul>`,21),$={href:"https://lucid.app/lucidchart/e68b9b43-3567-4cad-973f-59841167076d/edit?page=fIXUVjumr6Eu&invitationId=inv_b33787b6-e58a-471a-a000-680093c7a60b#",target:"_blank",rel:"noopener noreferrer"},nn=t('<p>Fixed Chrome Connector:</p><p><img src="'+z+`" alt=""></p><p>Way more simple than before.</p><blockquote><p>Before was: more messy.</p></blockquote><ul><li>[ ] Let&#39;s see and check that all methods don&#39;t break the flow logic.</li></ul><p>Note the following:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>     <span class="token operator">*</span><span class="token operator">/</span>

    <span class="token keyword">async</span> <span class="token function">checkAndNavigateIfNewDomain</span><span class="token punctuation">(</span><span class="token parameter">current_domain_name<span class="token punctuation">,</span> old_record_domain</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>Constants<span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Current Domain: &quot;</span> <span class="token operator">+</span> current_domain_name<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>Constants<span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Previous Domain: &quot;</span> <span class="token operator">+</span> old_record_domain<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>old_record_domain <span class="token operator">!==</span> current_domain_name<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>Constants<span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Navigated to a new domain: &#39;</span> <span class="token operator">+</span> current_domain_name<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wrapNewTabFocusLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startNewFocusTabLog</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">isEventComplete</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>Constants<span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Domain is the same&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can see that the <code>current</code> and <code>previous domain</code> is checked which is not needed on this model. Also they shouldn&#39;t be wrapped inside a single function. But run straight from the listeners (Can be simplified.)</p><ul><li>[ ] Update the latest specs for windows as well.</li></ul><h2 id="_16-saturday" tabindex="-1"><a class="header-anchor" href="#_16-saturday"><span>16 Saturday</span></a></h2><h2 id="_17-friday" tabindex="-1"><a class="header-anchor" href="#_17-friday"><span>17 Friday</span></a></h2>`,11);function sn(an,en){const a=i("ExternalLinkIcon");return p(),l("div",null,[R,n("ul",null,[n("li",null,[s("[x] Modify Link to update to newest endpoint. "),n("a",W,[s("https://in.api.loading.win/dev/incoming"),e(a)])]),N,O,L,F]),U,n("blockquote",null,[n("p",null,[n("a",M,[e(a)]),s(" I resolved it. I changed my method to come from the root resource (instead of the unnecessary {proxy+}, and also noticed that my python method was incorrect. I had "),B,s(", but data only accepts a string. I have to use either "),H,s(" or "),Y])]),V,n("p",null,[s("Here Some "),n("a",G,[s("promising attributes"),e(a)]),s(":")]),J,n("blockquote",null,[n("p",null,[s("Instance ID provides a unique ID per instance of your apps. You can implement Instance ID for "),n("a",K,[s("Android"),e(a)]),s(" and "),n("a",Q,[s("iOS"),e(a)]),s(" apps as well as "),n("a",Z,[s("Chrome apps/extensions"),e(a)]),s(".")])]),X,n("p",null,[s("It seems that the latest documentation can be found in the following "),n("a",$,[s("lucid"),e(a)]),s(" chart")]),nn])}const on=o(j,[["render",sn],["__file","24-3-march.html.vue"]]),pn=JSON.parse(`{"path":"/posts/journal/24-3-march.html","title":"2024 March","lang":"en-US","frontmatter":{"title":"2024 March","tags":["journal"]},"headers":[{"level":2,"title":"5 Tuesday","slug":"_5-tuesday","link":"#_5-tuesday","children":[{"level":3,"title":"Some notes regarding the idea of dev. And how to enforce such:","slug":"some-notes-regarding-the-idea-of-dev-and-how-to-enforce-such","link":"#some-notes-regarding-the-idea-of-dev-and-how-to-enforce-such","children":[]}]},{"level":2,"title":"7 Thursday","slug":"_7-thursday","link":"#_7-thursday","children":[{"level":3,"title":"Where is the error?","slug":"where-is-the-error","link":"#where-is-the-error","children":[]}]},{"level":2,"title":"8 Friday","slug":"_8-friday","link":"#_8-friday","children":[{"level":3,"title":"8.1 Allowing Errors Report to be also on the end message.","slug":"_8-1-allowing-errors-report-to-be-also-on-the-end-message","link":"#_8-1-allowing-errors-report-to-be-also-on-the-end-message","children":[]},{"level":3,"title":"8.2 Adding Design Considerations","slug":"_8-2-adding-design-considerations","link":"#_8-2-adding-design-considerations","children":[]},{"level":3,"title":"8.6 Continue working first on the Data Science Project: Get started with it!","slug":"_8-6-continue-working-first-on-the-data-science-project-get-started-with-it","link":"#_8-6-continue-working-first-on-the-data-science-project-get-started-with-it","children":[]}]},{"level":2,"title":"12 Tuesday","slug":"_12-tuesday","link":"#_12-tuesday","children":[{"level":3,"title":"12.todo","slug":"_12-todo","link":"#_12-todo","children":[]},{"level":3,"title":"12.1 Create Mockup Cards","slug":"_12-1-create-mockup-cards","link":"#_12-1-create-mockup-cards","children":[]},{"level":3,"title":"12.2 Continue Working On Chrome Extension","slug":"_12-2-continue-working-on-chrome-extension","link":"#_12-2-continue-working-on-chrome-extension","children":[]},{"level":3,"title":"12.3 Checking Antonio's latest release.","slug":"_12-3-checking-antonio-s-latest-release","link":"#_12-3-checking-antonio-s-latest-release","children":[]},{"level":3,"title":"12.4 Auth0","slug":"_12-4-auth0","link":"#_12-4-auth0","children":[]},{"level":3,"title":"Chrome Instance ID","slug":"chrome-instance-id","link":"#chrome-instance-id","children":[]}]},{"level":2,"title":"14 Thursday","slug":"_14-thursday","link":"#_14-thursday","children":[{"level":3,"title":"14.todo","slug":"_14-todo","link":"#_14-todo","children":[]},{"level":3,"title":"14.1 Fixing the Issue with the Local Timeslot","slug":"_14-1-fixing-the-issue-with-the-local-timeslot","link":"#_14-1-fixing-the-issue-with-the-local-timeslot","children":[]}]},{"level":2,"title":"15 Friday","slug":"_15-friday","link":"#_15-friday","children":[{"level":3,"title":"15.todo","slug":"_15-todo","link":"#_15-todo","children":[]},{"level":3,"title":"15.1 Continue Working On Chrome Extension","slug":"_15-1-continue-working-on-chrome-extension","link":"#_15-1-continue-working-on-chrome-extension","children":[]}]},{"level":2,"title":"16 Saturday","slug":"_16-saturday","link":"#_16-saturday","children":[]},{"level":2,"title":"17 Friday","slug":"_17-friday","link":"#_17-friday","children":[]}],"git":{"updatedTime":1710627500000,"contributors":[{"name":"NelsonWang","email":"wangnelson2@gmail.com","commits":4}]},"filePathRelative":"posts/journal/24-3-march.md","excerpt":"<h2>5 Tuesday</h2>\\n<h3>Some notes regarding the idea of dev. And how to enforce such:</h3>\\n<ul>\\n<li>48 Hours policy for all getbacks. 24 Hours Policy for sms replies.</li>\\n</ul>\\n<p>With this type of policy you should be able to keep up with work.</p>\\n<ul>\\n<li>In New York locations allow also: Visits and Monthly Photoshoot Sessions to keep Media upkeep.</li>\\n</ul>"}`);export{on as comp,pn as data};
