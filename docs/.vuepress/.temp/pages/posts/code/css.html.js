import comp from "C:/github/testing/code-documentation/docs/v2/code-docs-v2/docs/.vuepress/.temp/pages/posts/code/css.html.vue"
const data = JSON.parse("{\"path\":\"/posts/code/css.html\",\"title\":\"CSS\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"CSS\",\"lang\":\"en-US\",\"tags\":[\"practice\"]},\"headers\":[{\"level\":2,\"title\":\"ðŸŽ¯ Practice Sets\",\"slug\":\"ðŸŽ¯-practice-sets\",\"link\":\"#ðŸŽ¯-practice-sets\",\"children\":[]},{\"level\":2,\"title\":\"Selectors\",\"slug\":\"selectors\",\"link\":\"#selectors\",\"children\":[]},{\"level\":2,\"title\":\"Pseudo Classes\",\"slug\":\"pseudo-classes\",\"link\":\"#pseudo-classes\",\"children\":[]},{\"level\":2,\"title\":\"Attribute Selectors\",\"slug\":\"attribute-selectors\",\"link\":\"#attribute-selectors\",\"children\":[]}],\"git\":{\"updatedTime\":null,\"contributors\":[]},\"filePathRelative\":\"posts/code/css.md\",\"excerpt\":\"<header>\\n<ul>\\n<li>Examples Extracted from:\\n<ul>\\n<li><a href=\\\"https://htmlcheatsheet.com/css/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">CSS Cheat Sheet</a></li>\\n</ul>\\n</li>\\n</ul>\\n<p>Table of contents:</p>\\n\\n<h2>ðŸŽ¯ Practice Sets</h2>\\n<ul>\\n<li><a href=\\\"https://www.w3schools.com/css/exercise.asp\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">W3 School Excercises</a></li>\\n</ul>\\n<h2>Selectors</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Selector</th>\\n<th>description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>*</td>\\n<td>all elements</td>\\n</tr>\\n<tr>\\n<td>div</td>\\n<td>all div tags</td>\\n</tr>\\n<tr>\\n<td>div, pall</td>\\n<td>divs and paragraphs</td>\\n</tr>\\n<tr>\\n<td>div pparagraphs inside divs</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>div &gt; p</td>\\n<td>all p tags one level deep in div</td>\\n</tr>\\n<tr>\\n<td>div + p</td>\\n<td>p tags immediately after div</td>\\n</tr>\\n<tr>\\n<td>div ~ p</td>\\n<td>p tags preceded by div</td>\\n</tr>\\n<tr>\\n<td>.classname</td>\\n<td>all elements with class</td>\\n</tr>\\n<tr>\\n<td>#idname</td>\\n<td>element with ID</td>\\n</tr>\\n<tr>\\n<td>div.classname</td>\\n<td>divs with certain classname</td>\\n</tr>\\n<tr>\\n<td>div#idname</td>\\n<td>div with certain ID</td>\\n</tr>\\n<tr>\\n<td>#idname *</td>\\n<td>all elements inside #idname</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2>Pseudo Classes</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>a:link</th>\\n<th>link in normal state</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>a:active</td>\\n<td>link in clicked state</td>\\n</tr>\\n<tr>\\n<td>a:hover</td>\\n<td>link with mouse over it</td>\\n</tr>\\n<tr>\\n<td>a:visited</td>\\n<td>visited link</td>\\n</tr>\\n<tr>\\n<td>p::after{content:\\\"yo\\\";}</td>\\n<td>add content after p</td>\\n</tr>\\n<tr>\\n<td>p::before</td>\\n<td>add content before p</td>\\n</tr>\\n<tr>\\n<td>input:checked</td>\\n<td>checked inputs</td>\\n</tr>\\n<tr>\\n<td>input:disabled</td>\\n<td>disabled inputs</td>\\n</tr>\\n<tr>\\n<td>input:enabled</td>\\n<td>enabled inputs</td>\\n</tr>\\n<tr>\\n<td>input:focu</td>\\n<td>sinput has focus</td>\\n</tr>\\n<tr>\\n<td>input:in-range</td>\\n<td>value in range</td>\\n</tr>\\n<tr>\\n<td>input:out-of-range</td>\\n<td>input value out of range</td>\\n</tr>\\n<tr>\\n<td>input:valid</td>\\n<td>input with valid value</td>\\n</tr>\\n<tr>\\n<td>input:invalid</td>\\n<td>input with invalid value</td>\\n</tr>\\n<tr>\\n<td>input:optional</td>\\n<td>no required attribute</td>\\n</tr>\\n<tr>\\n<td>input:required</td>\\n<td>input with requred attribute</td>\\n</tr>\\n<tr>\\n<td>input:read-only</td>\\n<td>with readonly attribute</td>\\n</tr>\\n<tr>\\n<td>input:read-write</td>\\n<td>no readonly attrib.</td>\\n</tr>\\n<tr>\\n<td>div:empty</td>\\n<td>element with no children</td>\\n</tr>\\n<tr>\\n<td>p::first-letter</td>\\n<td>first letter in p</td>\\n</tr>\\n<tr>\\n<td>p::first-line</td>\\n<td>first line in p</td>\\n</tr>\\n<tr>\\n<td>p:first-of-type</td>\\n<td>first of some type</td>\\n</tr>\\n<tr>\\n<td>p:last-of-type</td>\\n<td>last of some type</td>\\n</tr>\\n<tr>\\n<td>p:lang(en)</td>\\n<td>p with en language attribute</td>\\n</tr>\\n<tr>\\n<td>:not(span)</td>\\n<td>element that's not a span</td>\\n</tr>\\n<tr>\\n<td>p:first-child</td>\\n<td>first child of its parent</td>\\n</tr>\\n<tr>\\n<td>p:last-child</td>\\n<td>last child of its parent</td>\\n</tr>\\n<tr>\\n<td>p:nth-child(2)</td>\\n<td>second child of its parent</td>\\n</tr>\\n<tr>\\n<td>p:nth-child(3n+1)</td>\\n<td>nth-child (an + b) formula</td>\\n</tr>\\n<tr>\\n<td>p:nth-last-child(2)</td>\\n<td>second child from behind</td>\\n</tr>\\n<tr>\\n<td>p:nth-of-type(2)</td>\\n<td>second p of its parent</td>\\n</tr>\\n<tr>\\n<td>p:nth-last-of-type(2)</td>\\n<td>...from behind</td>\\n</tr>\\n<tr>\\n<td>p:only-of-type</td>\\n<td>unique of its parent</td>\\n</tr>\\n<tr>\\n<td>p:only-child</td>\\n<td>only child of its parent</td>\\n</tr>\\n<tr>\\n<td>:root</td>\\n<td>documents root element</td>\\n</tr>\\n<tr>\\n<td>::selection</td>\\n<td>portion selected by user</td>\\n</tr>\\n<tr>\\n<td>:target</td>\\n<td>highlight active anchor</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h2>Attribute Selectors</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>a[target]</th>\\n<th>links with a target attribute</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>a[target=\\\"_blank\\\"]</td>\\n<td>links which open in new tab</td>\\n</tr>\\n<tr>\\n<td>[title~=\\\"chair\\\"]</td>\\n<td>title element containing a word</td>\\n</tr>\\n<tr>\\n<td>[class^=\\\"chair\\\"]</td>\\n<td>class starts with chair</td>\\n</tr>\\n<tr>\\n<td>[class|=\\\"chair\\\"]</td>\\n<td>class starts with the chair word</td>\\n</tr>\\n<tr>\\n<td>[class*=\\\"chair\\\"]</td>\\n<td>class contains chair</td>\\n</tr>\\n<tr>\\n<td>[class$=\\\"chair\\\"]</td>\\n<td>class ends with chair</td>\\n</tr>\\n<tr>\\n<td>input[type=\\\"button\\\"]</td>\\n<td>specified input type</td>\\n</tr>\\n</tbody>\\n</table>\\n<!-- CSV for Flashcards -->\\n<!-- a:link, link in normal state\\na:active, link in clicked state\\na:hover, link with mouse over it\\na:visited, visited link\\np::after{content:\\\"yo\\\";}, add content after p\\np::before, add content before p\\ninput:checked, checked inputs\\ninput:disabled, disabled inputs\\ninput:enabled, enabled inputs\\ninput:focu, sinput has focus\\ninput:in-range, value in range\\ninput:out-of-range,input value out of range\\ninput:valid,input with valid value\\ninput:invalid,input with invalid value\\ninput:optional, no required attribute\\ninput:required, input with requred attribute\\ninput:read-only, with readonly attribute\\ninput:read-write, no readonly attrib.\\ndiv:empty, element with no children\\np::first-letter, first letter in p\\np::first-line, first line in p\\np:first-of-type, first of some type\\np:last-of-type, last of some type\\np:lang(en), p with en language attribute\\n:not(span), element that's not a span\\np:first-child, first child of its parent\\np:last-child, last child of its parent\\np:nth-child(2), second child of its parent\\np:nth-child(3n+1), nth-child (an + b) formula\\np:nth-last-child(2), second child from behind\\np:nth-of-type(2), second p of its parent\\np:nth-last-of-type(2), ...from behind\\np:only-of-type, unique of its parent\\np:only-child, only child of its parent\\n:root, documents root element\\n::selection, portion selected by user\\n:target, highlight active anchor\\n\\n\\nSelector, description\\n*,all elements\\ndiv,all div tags\\ndivpall, divs and paragraphs\\ndiv pparagraphs inside divs\\ndiv > p,all p tags one level deep in div\\ndiv + p,p tags immediately after div\\ndiv ~ p,p tags preceded by div\\n.classname,all elements with class\\n#idname, element with ID\\ndiv.classname, divs with certain classname\\ndiv#idname, div with certain ID\\n#idname *,all elements inside #idname\\n\\n\\na[target], links with a target attribute\\na[target=\\\"_blank\\\"], links which open in new tab\\n[title~=\\\"chair\\\"], title element containing a word\\n[class^=\\\"chair\\\"], class starts with chair\\n[class|=\\\"chair\\\"], class starts with the chair word\\n[class*=\\\"chair\\\"], class contains chair\\n[class$=\\\"chair\\\"], class ends with chair\\ninput[type=\\\"button\\\"], specified input type --></header>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
